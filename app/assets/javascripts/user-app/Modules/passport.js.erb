'use strict';
var pyramidApp = angular.module('pyramidApp', ['ngAnimate',
    'ngCookies',
    'ngResource',
    'ngRoute',
    'ngSanitize',    
    'ngTouch',
    'Devise',
    'ui.bootstrap']);
pyramidApp.config(['$routeProvider', '$locationProvider',function ($routeProvider, $locationProvider) {
		  $locationProvider.html5Mode(true);
		  $routeProvider
		    .when('/user_app/templates',
		      { templateUrl: "<%= asset_path('templates.html') %>",
		        controller: "TemplatesCtrl" })
		    .when('/user_app/connections',
		      { templateUrl: "<%= asset_path('connections.html') %>",
		        controller: "ConnectionsCtrl" })
		    .when('/user_app/tasks',
		      { templateUrl: "<%= asset_path('tasks.html') %>",
		        controller: "TasksCtrl" })
		    .when('/user_app/tasks/:taskId',
		      { templateUrl: "<%= asset_path('tasksDetails.html') %>",
		        controller: "TaskDetailsCtrl" })
		    .otherwise({ redirectTo: '/user_app/' });
	}]);
pyramidApp.filter('secondsToTimeString', function() {
  return function(millseconds) {
    var seconds = Math.floor(millseconds % 60);
    var days = Math.floor(millseconds / 86400);
    var hours = Math.floor((millseconds % 86400) / 3600);
    var minutes = Math.floor(((millseconds % 86400) % 3600) / 60);
    var timeString = '';
    if(days > 0) timeString += (days > 1) ? (days + " дней ") : (days + " день ");
    if(hours > 0) timeString += (hours > 1) ? (hours + " часов ") : (hours + " час ");
    if(minutes > 0) timeString += (minutes > 1) ? (minutes + " минут ") : (minutes + " минута ");
    if(seconds >= 0) timeString += (seconds > 1) ? (seconds + " секунд ") : (seconds + " секунда ");
    return timeString;
}
});
pyramidApp.factory('Connections', ['$resource', function($resource) {
  return $resource('/admin_app/ssh_connections/:id.json', null, {
  });
}]);
pyramidApp.factory('Tasks', ['$resource', function($resource) {
  return $resource('/user_app/tasks/:id.json', null, {
  });
}]);
pyramidApp.factory('Templates', ['$resource', function($resource) {
  return $resource('/user_app/templates/:id.json', null, {
  });
}]);
pyramidApp.factory('SshCon', ['$resource', function($resource) {
  return $resource('/user_app/ssh_actions/:name/:password');
}]);
pyramidApp.factory('GetInf', ['$resource', function($resource) {
  return $resource('/user_app/getinf/:name/:password/:command');
}]);
pyramidApp.factory('GetOutputs', ['$resource', function($resource) {
  return $resource('/user_app/getOutputs/:name/:password/:task_name');
  }]);
 pyramidApp.factory('GetNodes', ['$resource', function($resource) {
  return $resource('/user_app/tasks/:id/get_nodes/:name/:password');
}]);